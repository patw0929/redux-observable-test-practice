{"version":3,"sources":["components/Spinner/Spinner.module.css","redux/modules/searchByKeyword.js","hoc/DebounceInput.js","redux/modules/root.js","redux/epics/searchByKeyword.js","redux/epics/root.js","redux/store.js","components/SearchBox/SearchBox.js","components/SearchBox/SearchBoxContainer.js","components/Spinner/Spinner.js","components/ErrorMessage/ErrorMessage.js","components/SearchResult/SearchResult.js","components/SearchResult/SearchResultContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","loader","load4","SEARCH_KEYWORD","SEARCH_KEYWORD_SUCCESS","SEARCH_KEYWORD_FAIL","initialState","isFetching","error","keyword","keywords","process","state","arguments","length","undefined","items","action","type","data","newItems","replace","Object","objectSpread","WrappedComponent","search","rootReducer","combineReducers","searchByKeyword","defineProperty","response","message","fetchAPI","getJSON","concat","pipe","map","_ref","searchSuccess","item","id","full_name","catchError","of","_ref2","searchFail","rootEpic","combineEpics","action$","store","ofType","debounceTime","distinctUntilChanged","filter","switchMap","configureStore","epicMiddleware","createEpicMiddleware","dependencies","ajax","enhancer","applyMiddleware","createStore","run","DebounceInput","onChange","props$","react_default","a","createElement","className","htmlFor","e","next","target","value","placeholder","_Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Subject","inherits","createClass","key","_this2","subscription","subscribe","unsubscribe","assign","Component","connect","dispatch","bindActionCreators","SearchBox","Spinner","styles","ErrorMessage","text","role","SearchResult","components_Spinner_Spinner","react","components_ErrorMessage_ErrorMessage","App","es","SearchBoxContainer","SearchResultContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15db3d47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__2Kdjv\",\"load4\":\"Spinner_load4__gHvlF\"};","export const SEARCH_KEYWORD = 'patw/search-by-keyword/SEARCH_KEYWORD';\nconst SEARCH_KEYWORD_SUCCESS = 'patw/search-by-keyword/SEARCH_KEYWORD_SUCCESS';\nconst SEARCH_KEYWORD_FAIL = 'patw/search-by-keyword/SEARCH_KEYWORD_FAIL';\n\nconst initialState = {\n  isFetching: false,\n  error: null,\n  keyword: '',\n  keywords: {},\n};\n\nfunction process(\n  state = {\n    items: [],\n  },\n  action\n) {\n  switch (action.type) {\n    case SEARCH_KEYWORD_SUCCESS: {\n      const data = action.items;\n      let newItems = [];\n\n      if (action.keyword.replace(/\\s/g, '').length) {\n        newItems = data && data.length > 0 ? data : [];\n      } else {\n        newItems = [];\n      }\n\n      return {\n        ...state,\n        items: newItems,\n      };\n    }\n\n    case SEARCH_KEYWORD_FAIL: {\n      return {\n        ...state,\n        items: [],\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SEARCH_KEYWORD: {\n      if (!action.keyword.replace(/\\s/g, '').length) {\n        return {\n          ...state,\n          isFetching: false,\n          error: null,\n          keyword: '',\n        };\n      }\n\n      return {\n        ...state,\n        isFetching: true,\n      };\n    }\n\n    case SEARCH_KEYWORD_SUCCESS: {\n      const keyword = action.keyword;\n\n      return {\n        ...state,\n        isFetching: false,\n        error: null,\n        keyword,\n        keywords: {\n          ...state.keywords,\n          [keyword]: process(state.keywords[keyword], action),\n        },\n      };\n    }\n\n    case SEARCH_KEYWORD_FAIL: {\n      return {\n        ...state,\n        isFetching: false,\n        error: action.error.response.message,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const search = (keyword = '') => ({\n  type: SEARCH_KEYWORD,\n  keyword,\n});\n\nexport const searchSuccess = ({ keyword, items }) => ({\n  type: SEARCH_KEYWORD_SUCCESS,\n  keyword,\n  items,\n});\n\nexport const searchFail = ({ keyword, error }) => ({\n  type: SEARCH_KEYWORD_FAIL,\n  keyword,\n  error,\n});\n","import React, { Component } from 'react';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\nexport default WrappedComponent => {\n  return class DebounceInput extends Component {\n    constructor(props) {\n      super(props);\n\n      this.props$ = new Subject();\n    }\n\n    componentDidMount() {\n      this.subscription = this.props$\n        .pipe(\n          debounceTime(500),\n          distinctUntilChanged()\n        ).subscribe(value => this.props.onChange(value)); // FIXME: pass function prop\n    }\n\n    componentWillUnmount() {\n      this.subscription.unsubscribe();\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} props$={this.props$} />\n    }\n  }\n}\n","import { combineReducers } from 'redux';\nimport searchByKeyword from './searchByKeyword';\n\nexport const rootReducer = combineReducers({\n  searchByKeyword,\n});\n","import { ofType } from 'redux-observable';\nimport { of } from 'rxjs';\nimport {\n  filter,\n  switchMap,\n  debounceTime,\n  distinctUntilChanged,\n  map,\n  catchError,\n} from 'rxjs/operators';\nimport { SEARCH_KEYWORD, searchSuccess, searchFail } from '../modules/searchByKeyword';\n\nconst fetchAPI = (getJSON, action) => (\n  getJSON(`https://api.github.com/search/repositories?q=${action.keyword}&sort=stars&order=desc`)\n    .pipe(\n      map(response =>\n        searchSuccess({\n          keyword: action.keyword,\n          items: response.items.map(item => {\n            return {\n              id: item.id,\n              full_name: item.full_name,\n            };\n          }),\n        })\n      ),\n      catchError(error => of(searchFail({\n        keyword: action.keyword,\n        error,\n      })))\n    )\n);\n\nexport const getSearchResultEpic = (action$, store, { getJSON }) => {\n  return action$.pipe(\n    ofType(SEARCH_KEYWORD),\n    debounceTime(300),\n    distinctUntilChanged(),\n    filter(action => action.keyword.length),\n    switchMap(action =>\n      fetchAPI(getJSON, action)\n    )\n  );\n};\n","import { combineEpics } from 'redux-observable';\nimport { getSearchResultEpic } from '../epics/searchByKeyword';\n\nexport const rootEpic = combineEpics(\n  getSearchResultEpic\n);\n","import { createEpicMiddleware } from 'redux-observable';\nimport { createStore, applyMiddleware } from 'redux';\nimport { ajax } from 'rxjs/ajax';\nimport { rootReducer } from './modules/root';\nimport { rootEpic } from './epics/root';\n\nconst configureStore = initialState => {\n  let store;\n  const epicMiddleware = createEpicMiddleware({\n    dependencies: {\n      getJSON: ajax.getJSON,\n    },\n  });\n  const enhancer = applyMiddleware(epicMiddleware);\n\n  if ('production' !== process.env.NODE_ENV) {\n    const Reactotron = require('./reactotronConfig').default; // eslint-disable-line global-require\n\n    store = Reactotron.createStore(rootReducer, initialState, enhancer);\n  } else {\n    store = createStore(rootReducer, initialState, enhancer);\n  }\n\n  if (module.hot) {\n    module.hot.accept('./modules/root', () => {\n      store.replaceReducer(rootReducer);\n    });\n  }\n\n  epicMiddleware.run(rootEpic);\n\n  return store;\n};\n\nexport default configureStore;\n","import React from 'react';\nimport DebounceInput from '../../hoc/DebounceInput';\n\nconst SearchBox = ({ onChange, props$ }) => (\n  <div className=\"form-group\">\n    <label htmlFor=\"search-input\">\n      Search GitHub repos:\n    </label>\n\n    <input\n      type=\"text\"\n      id=\"search-input\"\n      className=\"form-control\"\n      onChange={e => props$.next(e.target.value)}\n      placeholder=\"Search\"\n    />\n  </div>\n);\n\nexport default DebounceInput(\n  SearchBox\n);\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport SearchBox from './SearchBox';\nimport { search } from '../../redux/modules/searchByKeyword';\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onChange: bindActionCreators(search, dispatch),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SearchBox);\n","import React from 'react';\nimport styles from './Spinner.module.css';\n\nconst Spinner = () => (\n  <div className={styles.loader}>Loading...</div>\n);\n\nexport default Spinner;\n","import React from 'react';\n\nconst ErrorMessage = ({ text }) => (\n  <div className=\"alert alert-danger\" role=\"alert\">\n    <strong>Oops!</strong> {text}\n  </div>\n);\n\nexport default ErrorMessage;\n","import React, { Fragment } from 'react';\nimport Spinner from '../Spinner/Spinner';\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\n\nconst SearchResult = ({ items, isFetching, error }) => {\n  if (isFetching) {\n    return <Spinner />;\n  }\n\n  return (\n    <Fragment>\n      {!!error && <ErrorMessage text={error} />}\n      <ul className=\"list-group\">\n        {items.map(item => (\n          <li\n            key={item.id}\n            className=\"list-group-item\"\n          >\n            {item.full_name}\n          </li>\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default SearchResult;\n","import { connect } from 'react-redux';\nimport SearchResult from './SearchResult';\n\nconst mapStateToProps = state => {\n  const isFetching = state.searchByKeyword.isFetching;\n\n  if (!state.searchByKeyword.keyword) {\n    return {\n      isFetching,\n      items: [],\n      error: null,\n    };\n  }\n\n  return {\n    isFetching,\n    items: state.searchByKeyword.keywords[state.searchByKeyword.keyword].items,\n    error: state.searchByKeyword.error,\n  };\n};\n\nexport default connect(mapStateToProps)(SearchResult);\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/store';\nimport './App.css';\nimport SearchBox from './components/SearchBox/SearchBoxContainer';\nimport SearchResult from './components/SearchResult/SearchResultContainer';\n\nconst store = configureStore({});\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"container-fluid\">\n          <SearchBox />\n          <SearchResult />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}